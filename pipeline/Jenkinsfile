pipeline {
    agent any
    triggers {
        pollSCM 'H/15 * * * *'
    }
    stages {
        stage("Determine products and tests to run.") {
            steps {
                script {
                    def diffResult = sh(returnStdout: true, script: "git diff origin/master... --name-only")
                    def diffs = diffResult.split('\n')
                    def productsRegex = /products\/(.*?)\/.*/
                    productsToBuild = []
                    diffs.each {
                        def product = it.trim() =~ productsRegex
                        if(product.matches()) {
                            if(!productsToBuild.contains(product[0][1])) {
                                productsToBuild.push(product[0][1])
                                print("Found product ${product[0][1]}")
                            }
                        }
                    }
                }
            }
        }

        stage("Build products")  {
            steps {
                script {
                    productsToBuild.each {
                        build = load("/products/${it}/build.groovy")
                        build.run()
                    }
                }
            }
        }
    }
}